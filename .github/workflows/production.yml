name: Deploy Production

on:
  workflow_dispatch:
    inputs:
      deployStagingOntoProduction:
        description: "Deploy staging onto production? (true/false)"
        required: false
        default: "true"

env:
  TERRAFORM_VERSION: 1.0.0

jobs:
  update_production_docker_images:
    if: github.event.inputs.deployStagingOntoProduction == 'true'
    name: Copy and save image tags for production environment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.MCA_GITHUB_TOKEN }}
      - name: Save image tags for production environment
        run: |
          cd terraform
          cp staging.images.tfvars production.images.tfvars
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Update production environment to use staging Docker image versions [skip ci]" & git push

  terraform_deploy_production:
    if: github.ref == 'refs/heads/main' && always()
    needs: [update_production_docker_images]
    name: Terraform Deploy
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        working-directory: terraform
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_WORKSPACE: production
    steps:
      - uses: actions/checkout@v2
        with:
          ref: main
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      - name: Terraform Init
        run: terraform init
      - name: Terraform Validate
        run: terraform validate
      - name: Terraform Deploy
        env:
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
          TF_VAR_gov_notify_api_key: ${{ secrets.GOV_NOTIFY_API_KEY }}
          TF_VAR_gov_notify_customer_email_template: ${{ secrets.GOV_NOTIFY_CUSTOMER_EMAIL_TEMPLATE }}
          TF_VAR_basic_auth: ${{ secrets.BASIC_AUTH_CREDENTIALS }}
          TF_VAR_webapp_azure_ad_client_secret: ${{ secrets.WEBAPP_CLIENT_SECRET }}
          TF_VAR_webapp_azure_b2c_client_secret: ${{ secrets.AZURE_B2C_CLIENT_SECRET }}
          TF_VAR_webapp_azure_b2c_next_auth_jwt_secret: ${{ secrets.JWT_SECRET }}
          TF_VAR_service_basic_auth_username: ${{ secrets.SERVICE_BASIC_AUTH_USERNAME }}
          TF_VAR_service_basic_auth_password: ${{ secrets.SERVICE_BASIC_AUTH_PASSWORD }}
          TF_VAR_alert_email_address: ${{ secrets.ALERT_EMAIL_ADDRESS }}
          TF_VAR_aws_account_number: ${{ secrets.AWS_ACCOUNT_NUMBER }}
        run: terraform apply -auto-approve -var-file=production.tfvars -var-file=production.images.tfvars
