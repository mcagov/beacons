name: Test the Beacons application end-to-end

on:
  workflow_call:
    inputs:
      service-image-tag:
        description: The tag of the Service artefact to test
        required: true
        type: string
      test_gov_notify_feedback_email_address:
        description: The email address to use to test email alerts against
        required: true
        type: string
    secrets:
      aws_access_key_id:
        description: Required to download the test images from ECR
        required: true
      aws_secret_access_key:
        description: Required to download the test images from ECR
        required: true
      test_webapp_azure_b2c_session_token:
        description: The session token of a logged in user to allow Cypress to test behind auth
        required: true
      test_webapp_azure_b2c_jwt_secret:
        description: Permits Cypress to authenticate with Azure B2C to perform logged-in tests
        required: true
      test_webapp_azure_ad_client_secret:
        description: Permits the Webapp to authenticate with the Service
        required: true
      test_webapp_gov_notify_api_key:
        description: API key for the Webapp to send test emails
        required: true


defaults:
  run:
    working-directory: webapp

jobs:
  end_to_end_tests:
    name: End to end tests
    runs-on: ubuntu-latest

    env:
      WEBAPP_CLIENT_SECRET: ${{ secrets.test_webapp_azure_ad_client_secret }}
      SESSION_TOKEN: ${{ secrets.test_webapp_azure_b2c_session_token }}
      JWT_SECRET: ${{ secrets.test_webapp_azure_b2c_jwt_secret }}
      GOV_NOTIFY_API_KEY: ${{ secrets.test_webapp_gov_notify_api_key }}
      GOV_NOTIFY_FEEDBACK_EMAIL_ADDRESS: ${{ inputs.test_gov_notify_feedback_email_address }}

    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-node@v2.5.1
        with:
          node-version: "14"
      - name: Install npm dependencies
        run: npm ci
        env:
          CYPRESS_INSTALL_BINARY: 0
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: eu-west-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Bring up API and DB
        run: |
          SERVICE_IMAGE_TAG=${{ inputs.service-image-tag }} docker compose --verbose -f docker-compose.e2e.yml up --detach
      - name: Copy env vars
        run: cp .env.example .env.local
      - name: Checkout node
        uses: actions/setup-node@v2.5.1
        with:
          node-version: "14"
      - name: Run Cypress end to end tests
        uses: cypress-io/github-action@v2
        with:
          working-directory: webapp
          spec: cypress/endToEnd/*
          browser: chrome
          start: npm run start
          build: npm run build
          wait-on: "http://localhost:8080/spring-api/actuator/health"
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: webapp/cypress/screenshots/
      - name: Stop containers
        if: always()
        run: docker-compose --file "docker-compose.e2e.yml" down
