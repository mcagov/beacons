name: Publish a version of the Service image to ECR

on:
  workflow_call:
    inputs:
      tag:
        description: The tag to add to the published Docker image, e.g. "v1.0.1"
        required: true
        type: string
      registry_url:
        description: The URL of the registry where the image should be published
        required: true
        type: string
      repository_name:
        description: The name of the image to be published
        required: false
        default: beacons-service
        type: string
    secrets:
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true

defaults:
  run:
    working-directory: service

jobs:
  backoffice_spa_lint:
    name: Backoffice SPA - Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-node@v2.5.1
        with:
          node-version: "14"
      - name: Install npm dependencies
        working-directory: service/src/main/backoffice
        run: npm ci
      - name: Run linter
        working-directory: service/src/main/backoffice
        run: npm run lint

  backoffice_spa_unit_test:
    name: Backoffice SPA - Unit test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-node@v2.5.1
        with:
          node-version: "14"
      - name: Install npm dependencies
        working-directory: service/src/main/backoffice
        run: npm ci
      - name: Run unit tests
        working-directory: service/src/main/backoffice
        run: npm test

  spring_boot_unit_test:
    name: Spring Boot - Unit test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: 11
      - name: Unit tests
        run: ./gradlew clean test

  spring_boot_integration_test:
    name: Spring Boot - Integration test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: beacons_service
          POSTGRES_DB: beacons
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: 11
      - name: Integration tests
        run: ./gradlew clean integrationTest

  prettier_check:
    name: Prettier check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-node@v2.5.1
        with:
          node-version: "14"
      - name: Install npm dependencies
        run: npm ci
      - name: Cache dependencies
        uses: actions/cache@v2.1.6
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Run prettier
        run: npm run format:check

  docker_lint:
    name: Docker lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.4
      - name: Docker lint
        uses: brpaz/hadolint-action@v1.5.0
        with:
          dockerfile: service/Dockerfile

  docker_build:
    name: Build and Push Docker image
    runs-on: ubuntu-latest
    needs:
      [
        backoffice_spa_lint,
        backoffice_spa_unit_test,
        spring_boot_unit_test,
        spring_boot_integration_test,
        prettier_check,
        docker_lint,
      ]

    steps:
      - uses: actions/checkout@v2.3.4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0
      - name: Login to ECR
        uses: docker/login-action@v1.10.0
        with:
          registry: ${{ inputs.registry_url }}
          username: ${{ secrets.aws_access_key_id }}
          password: ${{ secrets.aws_secret_access_key }}
      - name: Build and Push
        uses: docker/build-push-action@v2.7.0
        with:
          context: service
          push: true
          tags: ${{ inputs.registry_url }}/${{ inputs.repository_name }}:${{ inputs.tag }}
